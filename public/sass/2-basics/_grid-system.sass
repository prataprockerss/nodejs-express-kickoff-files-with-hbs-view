$spacer: 1%
.grid-layout
  display: -webkit-flex
  display: -ms-flex
  display: flex
  margin-left: -1%
  margin-right: -1%
  flex-wrap: wrap
  [class^='grid']
    padding-left: 1%
    padding-right: 1%
    flex-basis: 0
    flex-grow: 1
    max-width: 100%
  &.debug
    [class^='grid']
      $c: #666
      border: 1px dashed $c
      background-color: lighten($c,50)
      color: $c
      padding-top: em(15)
      padding-bottom: em(15)

=cssGrid($widthList,$spacer,$maxElement:30)
  @if length($widthList) == 1
    &:nth-child(n+0)
      flex-basis: $widthList - $spacer
  @else if length($widthList) == 2
    @for $i from 1 through 2
      @if ($i == 1)
        &:nth-child(odd)
          flex-basis: nth($widthList,$i) - $spacer
      @if ($i == 2)
        &:nth-child(even)
          flex-basis: nth($widthList,$i) - $spacer
  @else if length($widthList) > 2
    $i: 1
    @for $j from 1 through $maxElement
      &:nth-child(#{$j})
        flex-basis: nth($widthList,$i) - $spacer
        $i: $i + 1
        @if ($i > length($widthList))
          $i: 1

=grid($ext,$totalClums:12)
  @for $i from 1 through $totalClums
    $k: (100% / $totalClums)
    .grid-layout
      .grid-#{$ext}-#{$i}
        flex: 0 0 ($k * $i)


.layout-1
  .grid
    +mq(min,768px)
      +cssGrid(60% 40%,1% )
    +mq(min,1200px)
      +cssGrid((40% 20% 20% 20%),1%)
    +mq(min,1600px)
      +cssGrid(25%,1%)


+mq(max,767px)
  +grid(xs)
+mq(min,768px)
  +grid(md)
+mq(min,1025px)
  +grid(lg)
+mq(min,1367px)
  +grid(xl)

.jc-space-between
  justify-content: space-between
.jc-space-around
  justify-content: space-around
.jc-space-center
  justify-content: center
